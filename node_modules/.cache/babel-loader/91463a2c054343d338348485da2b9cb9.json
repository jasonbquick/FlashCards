{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //   const [decks, setDecks] = useState([{ name: \"loading..\" }]);\n  //   const [deckDesc, setDeckDesc] = useState([]);\n  //   useEffect(() => {\n  //     async function loadDeck() {\n  //       console.log(await listDecks());\n  //       const response = await listDecks();\n  //       setDecks(response);\n  //     }\n  //     loadDeck();\n  //   }, []);\n  //   const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />);\n  //   console.log(deck);\n  //   return <div>{deck}</div>;\n  // }\n  const [decks, setDecks] = useState({});\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      setDecks(response);\n      setCount(previous => previous + 1);\n    }\n\n    loadDeck();\n  }, []);\n\n  function handleDelete() {\n    if (window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\n      let deckId = decks.id;\n      deleteDeck(deckId);\n      window.location.reload();\n    }\n  }\n\n  console.log(decks);\n  console.log(count);\n\n  if (count > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: decks.map((deck, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n  return 'Loading..';\n} // if(count > 0){\n// //     const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />)\n// return (<div>decks.map((deck) => <DeckList deck={deck} key={deck.id} />)</div>)\n//                          };\n// return 'Loading...'\n// }\n\n\n_s(Home, \"1SbxPGwseaoyTOzgVlzDSdD3z/s=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js"],"names":["React","useState","useEffect","Link","DeckList","listDecks","deleteDeck","Home","decks","setDecks","count","setCount","loadDeck","response","previous","handleDelete","window","confirm","deckId","id","location","reload","console","log","map","deck","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,uBAAtC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMR,SAAS,EAAhC;AACAI,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACAF,MAAAA,QAAQ,CAAEG,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAR;AACD;;AACDF,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;;AASA,WAASG,YAAT,GAAwB;AACpB,QACEC,MAAM,CAACC,OAAP,CAAe,uDAAf,CADF,EAEE;AACA,UAAIC,MAAM,GAAGV,KAAK,CAACW,EAAnB;AACAb,MAAAA,UAAU,CAACY,MAAD,CAAV;AACAF,MAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB;AACD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;;AACF,MAAGA,KAAK,GAAG,CAAX,EAAa;AACT,wBACI;AAAA,gBACKF,KAAK,CAACgB,GAAN,EAAWC,IAAI,EAAEC,KAAjB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AACD,SAAO,WAAP;AACC,C,CACD;AACA;AAEA;AACA;AAEA;AACA;;;GAxDSnB,I;;KAAAA,I;AA0DT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\";\n\nfunction Home() {\n//   const [decks, setDecks] = useState([{ name: \"loading..\" }]);\n//   const [deckDesc, setDeckDesc] = useState([]);\n\n//   useEffect(() => {\n//     async function loadDeck() {\n//       console.log(await listDecks());\n//       const response = await listDecks();\n//       setDecks(response);\n//     }\n//     loadDeck();\n//   }, []);\n\n//   const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />);\n//   console.log(deck);\n//   return <div>{deck}</div>;\n// }\nconst [decks, setDecks] = useState({});\nconst [count, setCount] = useState(0) \nuseEffect(() => {\n  async function loadDeck() {\n    const response = await listDecks();\n    setDecks(response);\n    setCount((previous) => previous + 1)\n  }\n  loadDeck();\n}, []);\n\nfunction handleDelete() {\n    if (\n      window.confirm(\"Delete this deck? You will not be able to recover it.\")\n    ) {\n      let deckId = decks.id;\n      deleteDeck(deckId);\n      window.location.reload();\n    }\n  }\n  console.log(decks)\n  console.log(count)\nif(count > 0){\n    return (\n        <div>\n            {decks.map((deck, index))}\n        </div>\n\n    )\n}\nreturn 'Loading..'\n}\n// if(count > 0){\n// //     const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />)\n                         \n// return (<div>decks.map((deck) => <DeckList deck={deck} key={deck.id} />)</div>)\n//                          };\n                         \n// return 'Loading...'\n// }\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}