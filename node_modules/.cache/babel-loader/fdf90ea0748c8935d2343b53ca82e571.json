{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState([{}]);\n  const [count, setCount] = useState(0);\n  const abortController = new AbortController();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      setDecks(response);\n      setCount(previous => previous + 1);\n    }\n\n    loadDeck();\n  }, []);\n  console.log(decks);\n\n  if (count > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckList, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  return 'Loading..';\n}\n\n_s(Home, \"ZJCGZkUsb05YPSWX+ug0xeV2NnI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js"],"names":["React","useState","useEffect","DeckList","listDecks","Home","decks","setDecks","count","setCount","abortController","AbortController","loadDeck","response","previous","console","log","map","deck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMT,SAAS,EAAhC;AACAG,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAEK,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAR;AACD;;AACDF,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AAEA,MAAGE,KAAK,GAAG,CAAX,EAAa;AACT,wBAAQ;AAAA,gBACHF,KAAK,CAACW,GAAN,CAAWC,IAAD,iBAAU,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAApB;AADG;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH;;AACD,SAAO,WAAP;AACC;;GAtBQb,I;;KAAAA,I;AAwBT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\n\nfunction Home() {\n\nconst [decks, setDecks] = useState([{}]);\nconst [count, setCount] = useState(0) \nconst abortController = new AbortController()\n\nuseEffect(() => {\n  async function loadDeck() {\n    const response = await listDecks();\n    setDecks(response);\n    setCount((previous) => previous + 1)\n  }\n  loadDeck();\n}, []);\nconsole.log(decks)\n\nif(count > 0){\n    return (<div>\n        {decks.map((deck) => <DeckList deck={deck} />)}\n    </div>)\n}\nreturn 'Loading..'\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}