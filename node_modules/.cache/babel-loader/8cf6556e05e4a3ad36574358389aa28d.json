{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardView({\n  cards\n}) {\n  _s();\n\n  console.log(cards);\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const param = useParams();\n  const deckId = param.deckId;\n  const length = cards.length;\n\n  if (length > 2) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", length, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: ``,\n        class: \"btn btn-primary\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CardView, \"l5W02Y/ZdAbsW9hyu1E7nv3EQdI=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = CardView;\nexport default CardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardView.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","CardView","cards","console","log","url","path","param","deckId","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAACG,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAcP,aAAa,EAAjC;AACA,QAAMQ,KAAK,GAAGP,SAAS,EAAvB;AACA,QAAMQ,MAAM,GAAGD,KAAK,CAACC,MAArB;AACE,QAAMC,MAAM,GAAGP,KAAK,CAACO,MAArB;;AACA,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qEACiDA,MADjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAG,QAAA,IAAI,EAAG,EAAV;AAAa,QAAA,KAAK,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF;;GApBQR,Q;UAEWF,a,EACNC,S;;;KAHLC,Q;AAsBT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\n\nfunction CardView({cards}) {\nconsole.log(cards)\nconst {url, path} = useRouteMatch()\nconst param = useParams()\nconst deckId = param.deckId\n  const length = cards.length\n  if (length > 2) {\n    return null;\n  } else {\n    return (\n      <div>\n        <h2>Not enough cards.</h2>\n        <p>\n          You need at least 3 cards to study. There are {length} cards in this\n          deck.\n        </p>\n        <a href={``} class=\"btn btn-primary\">Add Card</a>\n      </div>\n    );\n  }\n}\n\nexport default CardView\n"]},"metadata":{},"sourceType":"module"}