{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api/index.js\";\nimport { Route, Switch, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport DeckView from \"./DeckView\";\nimport AddCard from \"./AddCard\";\nimport Deck from \"./Deck\";\nimport DeckEdit from \"./DeckEdit\";\nimport CardEdit from \"./CardEdit\";\nimport AddDeck from \"./AddDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState({\n    name: 'loading..'\n  });\n  const [deckDesc, setDeckDesc] = useState([]);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      setDecks(response);\n    }\n\n    loadDeck();\n  }, []);\n  useEffect(() => {\n    if (decks.length > 0) {\n      let desc = [];\n\n      for (let i = 0; i < decks.length; i++) {\n        desc.push({\n          name: decks[i].name,\n          id: decks[i].id,\n          description: decks[i].description,\n          length: decks[i].cards.length\n        });\n      }\n\n      setDeckDesc(desc);\n    }\n  }, [decks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/decks/new\",\n            class: \"btn btn-secondary\",\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            decks: decks,\n            deckDesc: deckDesc,\n            h: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(AddDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(DeckView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: /*#__PURE__*/_jsxDEV(DeckEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(CardEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"4VueA+CLOGbeUwjRRXDnbAvt+sY=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","listDecks","Route","Switch","Link","BrowserRouter","Router","Home","DeckView","AddCard","Deck","DeckEdit","CardEdit","AddDeck","Layout","decks","setDecks","name","deckDesc","setDeckDesc","loadDeck","response","length","desc","i","push","id","description","cards"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api/index.js\"\nimport { Route, Switch, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport DeckView from \"./DeckView\";\nimport AddCard from \"./AddCard\";\nimport Deck from \"./Deck\";\nimport DeckEdit from \"./DeckEdit\";\nimport CardEdit from \"./CardEdit\";\nimport AddDeck from \"./AddDeck\";\n\n\nfunction Layout() {\n  const [decks, setDecks] = useState({name: 'loading..'});\n  const [deckDesc, setDeckDesc] = useState([]);\n  \n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      setDecks(response)\n    }\n    loadDeck();\n  }, [])\n\n    useEffect(() => {\n      if (decks.length > 0) {\n        let desc = [];\n        for (let i = 0; i < decks.length; i++){\n          desc.push({name: decks[i].name, id: decks[i].id, description: decks[i].description, length: decks[i].cards.length})\n        }        setDeckDesc(desc)\n      }\n    }, [decks])\n    \n\n  return (\n    <div>\n      <Header />\n      \n        {/* TODO: Implement the screen starting here */}\n        <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Link to=\"/decks/new\" class=\"btn btn-secondary\">Create Deck</Link>\n            <Home decks={decks} deckDesc={deckDesc} h/>\n          </Route>\n          <Route path=\"/decks/new\">\n            <AddDeck />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <DeckView />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <DeckEdit />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <CardEdit />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <Deck />\n          </Route>\n          <Route>\n           <NotFound />\n          </Route>\n        </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}