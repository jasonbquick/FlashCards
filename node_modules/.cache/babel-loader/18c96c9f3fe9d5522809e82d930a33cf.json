{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport CardView from \"./CardView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: [],\n    deckId: 1\n  });\n  const [cards, setCards] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  useEffect(() => {\n    const deckCards = deck.cards;\n\n    if (deck.cards.length > 0) {\n      let card = [];\n\n      for (let i = 0; i < deckCards.length; i++) {\n        card.push({\n          front: deckCards[i].front,\n          back: deckCards[i].back,\n          id: deckCards[i].id,\n          deckId: deckCards[i].deckId\n        });\n      }\n\n      setCards(card);\n    }\n  }, [deck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"nav-link disabled\",\n            children: \" / Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardView, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckView, \"vNx0N9ha5zrccjXIaVSCWPlgjlM=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","readDeck","CardView","DeckView","deck","setDeck","cards","deckId","setCards","loadDeck","response","deckCards","length","card","i","push","front","back","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAAhC;AACA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACM,MAAD,CAA/B;AACAF,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD;;AACDD,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACF,MAAD,CANM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAGP,IAAI,CAACE,KAAvB;;AACA,QAAIF,IAAI,CAACE,KAAL,CAAWM,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAEL,SAAS,CAACG,CAAD,CAAT,CAAaE,KADZ;AAERC,UAAAA,IAAI,EAAEN,SAAS,CAACG,CAAD,CAAT,CAAaG,IAFX;AAGRC,UAAAA,EAAE,EAAEP,SAAS,CAACG,CAAD,CAAT,CAAaI,EAHT;AAIRX,UAAAA,MAAM,EAAEI,SAAS,CAACG,CAAD,CAAT,CAAaP;AAJb,SAAV;AAMD;;AACDC,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD;AACF,GAdQ,EAcN,CAACT,IAAD,CAdM,CAAT;AAeA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,iCAAX;AAAA,+BACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAA,kCACE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAwB,YAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASG,MAAO,EAA3B;AAAA,6BAAiCH,IAAI,CAACe,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAG,YAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,iBAAKf,IAAI,CAACe,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3CQH,Q;UAGYH,S;;;KAHZG,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport CardView from \"./CardView\";\n\nfunction DeckView() {\n  const [deck, setDeck] = useState({ cards: [], deckId: 1 });\n  const [cards, setCards] = useState([]);\n  const { deckId } = useParams();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n    loadDeck();\n  }, [deckId]);\n  useEffect(() => {\n    const deckCards = deck.cards;\n    if (deck.cards.length > 0) {\n      let card = [];\n      for (let i = 0; i < deckCards.length; i++) {\n        card.push({\n          front: deckCards[i].front,\n          back: deckCards[i].back,\n          id: deckCards[i].id,\n          deckId: deckCards[i].deckId,\n        });\n      }\n      setCards(card);\n    }\n  }, [deck]);\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-brand\" href=\"/\">\n              Home\n            </a>\n            <Link to={`/decks/${deckId}`}>/ {deck.name} </Link>\n            <a class=\"nav-link disabled\"> / Study</a>\n          </ul>\n        </div>\n      </nav>\n      <h1>{deck.name}: Study</h1>\n      <CardView cards={cards} />\n    </div>\n  );\n}\n\nexport default DeckView;\n"]},"metadata":{},"sourceType":"module"}