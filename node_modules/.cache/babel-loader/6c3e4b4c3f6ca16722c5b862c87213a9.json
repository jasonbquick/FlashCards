{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState({\n    name: \"loading..\"\n  });\n  const [deckDesc, setDeckDesc] = useState([]);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      let deck = [];\n\n      for (let i = 0; i < decks.length; i++) {\n        desc.push({\n          name: decks[i].name,\n          id: decks[i].id,\n          description: decks[i].description,\n          length: decks[i].cards.length\n        });\n      }\n\n      setDecks(response);\n    }\n\n    loadDeck();\n  }, []);\n  useEffect(() => {\n    let desc = [];\n\n    for (let i = 0; i < decks.length; i++) {\n      desc.push({\n        name: decks[i].name,\n        id: decks[i].id,\n        description: decks[i].description,\n        length: decks[i].cards.length\n      });\n    }\n\n    setDeckDesc(desc);\n  }, [decks]);\n  console.log(decks);\n  const deck = deckDesc.map(deck => /*#__PURE__*/_jsxDEV(DeckList, {\n    deck: deck\n  }, deck.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: deck\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"aqbj9W4hm/G/Rgwt9LSPwmH48AA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js"],"names":["React","useState","useEffect","DeckList","listDecks","Home","decks","setDecks","name","deckDesc","setDeckDesc","loadDeck","response","deck","i","length","desc","push","id","description","cards","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;AACF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMR,SAAS,EAAhC;AACA,UAAIS,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,QAAAA,IAAI,CAACC,IAAL,CAAU;AACRT,UAAAA,IAAI,EAAEF,KAAK,CAACQ,CAAD,CAAL,CAASN,IADP;AAERU,UAAAA,EAAE,EAAEZ,KAAK,CAACQ,CAAD,CAAL,CAASI,EAFL;AAGRC,UAAAA,WAAW,EAAEb,KAAK,CAACQ,CAAD,CAAL,CAASK,WAHd;AAIRJ,UAAAA,MAAM,EAAET,KAAK,CAACQ,CAAD,CAAL,CAASM,KAAT,CAAeL;AAJf,SAAV;AAMD;;AACDR,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACD;;AACDD,IAAAA,QAAQ;AACT,GAfQ,EAeN,EAfM,CAAT;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,MAAAA,IAAI,CAACC,IAAL,CAAU;AACRT,QAAAA,IAAI,EAAEF,KAAK,CAACQ,CAAD,CAAL,CAASN,IADP;AAERU,QAAAA,EAAE,EAAEZ,KAAK,CAACQ,CAAD,CAAL,CAASI,EAFL;AAGRC,QAAAA,WAAW,EAAEb,KAAK,CAACQ,CAAD,CAAL,CAASK,WAHd;AAIRJ,QAAAA,MAAM,EAAET,KAAK,CAACQ,CAAD,CAAL,CAASM,KAAT,CAAeL;AAJf,OAAV;AAMD;;AACDL,IAAAA,WAAW,CAACM,IAAD,CAAX;AACH,GAXQ,EAWN,CAACV,KAAD,CAXM,CAAT;AAYMe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACF,QAAMO,IAAI,GAAGJ,QAAQ,CAACc,GAAT,CAAcV,IAAD,iBACtB,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,KAA2BA,IAAI,CAACK,EAAhC;AAAA;AAAA;AAAA;AAAA,UADS,CAAb;AAGF,sBACI;AAAA,cACSL;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1CQR,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect}  from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\n\n\nfunction Home() {\n    const [decks, setDecks] = useState({ name: \"loading..\" });\n  const [deckDesc, setDeckDesc] = useState([]);\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      let deck = [];\n      for (let i = 0; i < decks.length; i++) {\n        desc.push({\n          name: decks[i].name,\n          id: decks[i].id,\n          description: decks[i].description,\n          length: decks[i].cards.length,\n        });\n      }\n      setDecks(response);\n    }\n    loadDeck();\n  }, []);\n\n  useEffect(() => {\n      let desc = [];\n      for (let i = 0; i < decks.length; i++) {\n        desc.push({\n          name: decks[i].name,\n          id: decks[i].id,\n          description: decks[i].description,\n          length: decks[i].cards.length,\n        });\n      }\n      setDeckDesc(desc);\n  }, [decks]);\n        console.log(decks)\n      const deck = deckDesc.map((deck) => (\n          <DeckList deck={deck} key={deck.id} />\n      ))\n    return (\n        <div>\n                {deck}\n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}