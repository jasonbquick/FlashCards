{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardView({\n  cards\n}) {\n  _s();\n\n  const history = useHistory();\n  const [flip, setFlip] = useState(true);\n  const [cardID, setCardID] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const param = useParams();\n  const deckId = param.deckId;\n  const length = cards.length;\n  const cardCount = cardID + 1;\n\n  function handleFlip() {\n    setFlip(!flip);\n    setFlipCount(previous => previous + 1);\n  }\n\n  function handleNext() {\n    setCardID(previous => previous + 1);\n\n    if (cardCount >= length) {\n      if (window.confirm(\"Restart cards? Click 'cancel' to return to the home page\")) {\n        window.location.reload();\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  if (length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container border\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Card \", cardCount, \" of \", length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: flip ? cards[cardID].front : cards[cardID].back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-primary p-2\",\n              onClick: handleFlip,\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), flipCount > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-primary p-2\",\n              onClick: handleNext,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", length, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/decks/${deckId}/cards/new`,\n        class: \"btn btn-primary\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CardView, \"8p5H5TnLphuBSDVPUVIP6alz1wA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardView;\nexport default CardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardView.js"],"names":["React","useState","useRouteMatch","useParams","useHistory","CardView","cards","history","flip","setFlip","cardID","setCardID","flipCount","setFlipCount","param","deckId","length","cardCount","handleFlip","previous","handleNext","window","confirm","location","reload","push","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMa,KAAK,GAAGX,SAAS,EAAvB;AACA,QAAMY,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,MAAM,GAAGV,KAAK,CAACU,MAArB;AACA,QAAMC,SAAS,GAAGP,MAAM,GAAG,CAA3B;;AACA,WAASQ,UAAT,GAAsB;AACpBT,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAK,IAAAA,YAAY,CAAEM,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAZ;AACD;;AACD,WAASC,UAAT,GAAsB;AACpBT,IAAAA,SAAS,CAAEQ,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAT;;AACA,QAAIF,SAAS,IAAID,MAAjB,EAAyB;AACvB,UACEK,MAAM,CAACC,OAAP,CACE,0DADF,CADF,EAIE;AACAD,QAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB;AACD,OAND,MAMO;AACLjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD;AACF;AACF;;AACD,MAAIT,MAAM,GAAG,CAAb,EAAgB;AACd,wBACE;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA,+BACE;AAAA,iCACE;AAAA,oCACE;AAAA,kCACQC,SADR,UACuBD,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,wBAAIR,IAAI,GAAGF,KAAK,CAACI,MAAD,CAAL,CAAcgB,KAAjB,GAAyBpB,KAAK,CAACI,MAAD,CAAL,CAAciB;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAQ,cAAA,KAAK,EAAC,qBAAd;AAAoC,cAAA,OAAO,EAAET,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAQGN,SAAS,GAAG,CAAZ,gBACC;AAAQ,cAAA,KAAK,EAAC,qBAAd;AAAoC,cAAA,OAAO,EAAEQ,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAIG,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD,GAvBD,MAuBO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qEACiDJ,MADjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAG,QAAA,IAAI,EAAG,UAASD,MAAO,YAA1B;AAAuC,QAAA,KAAK,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACF;;GAhEQV,Q;UACSD,U,EAIFD,S;;;KALPE,Q;AAkET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\n\nfunction CardView({ cards }) {\n  const history = useHistory();\n  const [flip, setFlip] = useState(true);\n  const [cardID, setCardID] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const param = useParams();\n  const deckId = param.deckId;\n  const length = cards.length;\n  const cardCount = cardID + 1;\n  function handleFlip() {\n    setFlip(!flip);\n    setFlipCount((previous) => previous + 1);\n  }\n  function handleNext() {\n    setCardID((previous) => previous + 1);\n    if (cardCount >= length) {\n      if (\n        window.confirm(\n          \"Restart cards? Click 'cancel' to return to the home page\"\n        )\n      ) {\n        window.location.reload();\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n  if (length > 2) {\n    return (\n      <div>\n        <div class=\"container border\">\n          <div>\n            <div>\n              <h3>\n                Card {cardCount} of {length}\n              </h3>\n              <p>{flip ? cards[cardID].front : cards[cardID].back}</p>\n              <button class=\"btn btn-primary p-2\" onClick={handleFlip}>\n                Flip\n              </button>\n              {flipCount > 0 ? (\n                <button class=\"btn btn-primary p-2\" onClick={handleNext}>\n                  Next\n                </button>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h2>Not enough cards.</h2>\n        <p>\n          You need at least 3 cards to study. There are {length} cards in this\n          deck.\n        </p>\n        <a href={`/decks/${deckId}/cards/new`} class=\"btn btn-primary\">\n          Add Card\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n"]},"metadata":{},"sourceType":"module"}