{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardEdit() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams(); // console.log('deckId', deckId)\n  // console.log('cardId', cardId)\n\n  const [deck, setDeck] = useState({\n    name: 'loading...'\n  });\n  const [card, setCard] = useState({\n    front: 'loading...',\n    back: 'loading...'\n  });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleSubmit = () => {\n    const newCard = {\n      \"id\": cardId,\n      \"front\": front,\n      \"back\": back\n    };\n    console.log(newCard);\n  };\n\n  useEffect(() => {\n    async function loadCard() {\n      const response = await readCard(cardId);\n      setCard(response);\n    }\n\n    loadCard();\n  }, [cardId]); // console.log(deck)\n  // console.log(card)\n\n  const handleFrontChange = event => setFront(event.target.value);\n\n  const handleBackChange = event => setBack(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\" / Edit Card \", cardId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: card.front,\n        onChange: handleFrontChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: card.back,\n        onChagne: handleBackChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        class: \"btn btn-secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardEdit, \"syJYlOxXygqEEwp324qAlBclpLc=\", false, function () {\n  return [useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardEdit.js"],"names":["React","useEffect","useState","Link","useParams","useRouteMatch","readDeck","readCard","updateCard","CardEdit","deckId","cardId","deck","setDeck","name","card","setCard","front","back","setFront","setBack","loadDeck","response","handleSubmit","newCard","console","log","loadCard","handleFrontChange","event","target","value","handleBackChange"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index\"\n\n\nfunction CardEdit(){\n    const {deckId, cardId} = useParams();\n    // console.log('deckId', deckId)\n    // console.log('cardId', cardId)\n    const [deck, setDeck] = useState({name: 'loading...'})\n    const [card, setCard] = useState({front: 'loading...', back: 'loading...'});\n    const [front, setFront] = useState();\n    const [back, setBack] = useState();\n    useEffect(() => {\n        async function loadDeck() {\n          const response = await readDeck(deckId);\n          setDeck(response);\n        }\n        loadDeck();\n      }, [deckId]);\n\n      const handleSubmit = () => {\n          const newCard = {\"id\": cardId, \"front\": front, \"back\": back}\n          console.log(newCard)\n      }\n\n      useEffect(() => {\n        async function loadCard() {\n          const response = await readCard(cardId);\n          setCard(response);\n        }\n        loadCard();\n      }, [cardId]);\n    // console.log(deck)\n    // console.log(card)\n\n    const handleFrontChange = (event) => setFront(event.target.value);\n    const handleBackChange = (event) => setBack(event.target.value);\n\n    return (\n        <div>\n        <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-item\" href=\"/\">\n              Home\n            </a>\n            <Link to={`/decks/${deckId}`}>/ {deck.name} </Link>\n            <a> / Edit Card {cardId}</a>\n          </ul>\n        </div>\n      </nav>\n      <div>\n          <h1>Edit Card</h1>\n          <h6>Front</h6>\n          <textarea placeholder={card.front} onChange={handleFrontChange}></textarea>\n          <h6>Back</h6>\n          <textarea placeholder={card.back} onChagne={handleBackChange}></textarea>\n      </div>\n      <div>\n          <Link to={`/decks/${deckId}`} class=\"btn btn-secondary\">Cancel</Link>\n          <button class=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\n      </div>\n      </div>\n    )\n}\n\nexport default CardEdit"]},"metadata":{},"sourceType":"module"}