{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //   const [decks, setDecks] = useState([{ name: \"loading..\" }]);\n  //   const [deckDesc, setDeckDesc] = useState([]);\n  //   useEffect(() => {\n  //     async function loadDeck() {\n  //       console.log(await listDecks());\n  //       const response = await listDecks();\n  //       setDecks(response);\n  //     }\n  //     loadDeck();\n  //   }, []);\n  //   const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />);\n  //   console.log(deck);\n  //   return <div>{deck}</div>;\n  // }\n  const [decks, setDecks] = useState({});\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      setDecks(response);\n    }\n\n    loadDeck();\n  }, []);\n\n  function handleDelete() {\n    if (window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\n      let deckId = decks.id;\n      deleteDeck(deckId);\n      window.location.reload();\n    }\n  }\n\n  if (count > 0) {\n    return decks.map(deck => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        class: \"container border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"pl-2\",\n            children: [deck.cards.length, \" cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}`,\n          class: \"btn btn-primary\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/study`,\n          class: \"btn btn-primary\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-danger float-end\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return 'Loading..';\n} // if(count > 0){\n// //     const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />)\n// return (<div>decks.map((deck) => <DeckList deck={deck} key={deck.id} />)</div>)\n//                          };\n// return 'Loading...'\n// }\n\n\n_s(Home, \"1SbxPGwseaoyTOzgVlzDSdD3z/s=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js"],"names":["React","useState","useEffect","Link","DeckList","listDecks","deleteDeck","Home","decks","setDecks","count","setCount","loadDeck","response","handleDelete","window","confirm","deckId","id","location","reload","map","deck","name","cards","length","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,uBAAtC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMR,SAAS,EAAhC;AACAI,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACD;;AACDD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;;AAQA,WAASE,YAAT,GAAwB;AACpB,QACEC,MAAM,CAACC,OAAP,CAAe,uDAAf,CADF,EAEE;AACA,UAAIC,MAAM,GAAGT,KAAK,CAACU,EAAnB;AACAZ,MAAAA,UAAU,CAACW,MAAD,CAAV;AACAF,MAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB;AACD;AACF;;AACH,MAAGV,KAAK,GAAC,CAAT,EAAW;AACP,WAAQF,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAS;AACvB;AAAA;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA,gCACF;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,KAAK,EAAC,MAAT;AAAA,uBAAiBD,IAAI,CAACE,KAAL,CAAWC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAKF;AAAA,oBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,gBALE,eAMF,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASJ,IAAI,CAACJ,EAAG,EAA5B;AAA+B,UAAA,KAAK,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANE,eASF,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASI,IAAI,CAACJ,EAAG,QAA5B;AAAqC,UAAA,KAAK,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATE,eAYF;AAAQ,UAAA,KAAK,EAAC,0BAAd;AAAyC,UAAA,OAAO,EAAEJ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBH,KAjBO,CAAR;AAmBH;;AACD,SAAO,WAAP;AACC,C,CACD;AACA;AAEA;AACA;AAEA;AACA;;;GAlESP,I;;KAAAA,I;AAoET,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\";\n\nfunction Home() {\n//   const [decks, setDecks] = useState([{ name: \"loading..\" }]);\n//   const [deckDesc, setDeckDesc] = useState([]);\n\n//   useEffect(() => {\n//     async function loadDeck() {\n//       console.log(await listDecks());\n//       const response = await listDecks();\n//       setDecks(response);\n//     }\n//     loadDeck();\n//   }, []);\n\n//   const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />);\n//   console.log(deck);\n//   return <div>{deck}</div>;\n// }\nconst [decks, setDecks] = useState({});\nconst [count, setCount] = useState(0) \nuseEffect(() => {\n  async function loadDeck() {\n    const response = await listDecks();\n    setDecks(response);\n  }\n  loadDeck();\n}, []);\n\nfunction handleDelete() {\n    if (\n      window.confirm(\"Delete this deck? You will not be able to recover it.\")\n    ) {\n      let deckId = decks.id;\n      deleteDeck(deckId);\n      window.location.reload();\n    }\n  }\nif(count>0){\n    return (decks.map((deck)=> {\n        <div class=\"container border\">\n      <div class=\"d-flex\">\n        <h3>{deck.name}</h3>\n        <p class=\"pl-2\">{deck.cards.length} cards</p>\n      </div>\n      <p>{deck.description}</p>\n      <Link to={`/decks/${deck.id}`} class=\"btn btn-primary\">\n        View\n      </Link>\n      <Link to={`/decks/${deck.id}/study`} class=\"btn btn-primary\">\n        Study\n      </Link>\n      <button class=\"btn btn-danger float-end\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n    })\n    )\n}\nreturn 'Loading..'\n}\n// if(count > 0){\n// //     const deck = decks.map((deck) => <DeckList deck={deck} key={deck.id} />)\n                         \n// return (<div>decks.map((deck) => <DeckList deck={deck} key={deck.id} />)</div>)\n//                          };\n                         \n// return 'Loading...'\n// }\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}