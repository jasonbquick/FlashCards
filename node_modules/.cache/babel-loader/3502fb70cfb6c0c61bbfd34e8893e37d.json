{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    name: \"\"\n  });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  const {\n    deckId\n  } = useParams();\n  let max = 0;\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n      response.forEach(card => {\n        if (card.id > max) {\n          max = card.id;\n        }\n      });\n    }\n\n    loadDeck();\n  }, []);\n\n  const handleFrontChange = event => setFront(event.target.value);\n\n  const handleBackChange = event => setBack(event.target.value);\n\n  const handleSave = () => {\n    const signal = {\n      front: {\n        front\n      },\n      back: {\n        back\n      }\n    }; //   const result = window.confirm(\"Save?\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" / Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Front side of card\",\n        onChange: handleFrontChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Back side of card\",\n        onChange: handleBackChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-secondary\",\n          onClick: () => history.push(\"/\"),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"cb+/d4I2LzjfXVx3HUyeQi8zd2A=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/AddCard.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","useHistory","readDeck","updateDeck","AddCard","history","deck","setDeck","name","front","setFront","back","setBack","deckId","max","loadDeck","response","forEach","card","id","handleFrontChange","event","target","value","handleBackChange","handleSave","signal","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\n\nfunction AddCard() {\n    const history = useHistory();\n  const [deck, setDeck] = useState({ name: \"\" });\n  const [front, setFront] = useState()\n  const [back, setBack] = useState()\n  const { deckId } = useParams();\n  let max = 0\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n      response.forEach(card => {\n          if(card.id > max) {\n              max = card.id\n          }\n      })\n    }\n    loadDeck();\n  }, []);\n  const handleFrontChange = (event) => setFront(event.target.value)\n  const handleBackChange = (event) => setBack(event.target.value)\n  const handleSave = () => {\n      const signal = {front: {front}, back: {back}  }\n    //   const result = window.confirm(\"Save?\")\n  }\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-brand\" href=\"/\">\n              Home\n            </a>\n            <a>/ {deck.name} </a>\n            <a> / Add Card</a>\n          </ul>\n        </div>\n      </nav>\n      <div>\n        <h4>Front</h4>\n        <textarea placeholder=\"Front side of card\" onChange={handleFrontChange}></textarea>\n        <h4>Back</h4>\n        <textarea placeholder=\"Back side of card\" onChange={handleBackChange}></textarea>\n        <div>\n          <button class=\"btn btn-secondary\" onClick={()=> history.push(\"/\")}>Done</button>\n          <button class=\"btn btn-primary\" onClick={handleSave}>Save</button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}