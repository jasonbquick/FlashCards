{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [cards, setCards] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  useEffect(() => {\n    const deckCards = deck.cards;\n\n    if (deck.cards.length > 0) {\n      let card = [];\n\n      for (let i = 0; i < deckCards.length; i++) {\n        card.push({\n          front: deckCards[i].front,\n          back: deckCards[i].back,\n          id: deckCards[i].id,\n          deckId: deckCards[i].deckId\n        });\n      }\n\n      setCards(card);\n    }\n  }, [deck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DeckEdit, \"JS4YtrnJgBG+fJ4Fvu4gWFAMrI4=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckEdit.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","readDeck","DeckEdit","deck","setDeck","cards","setCards","deckId","loadDeck","response","deckCards","length","card","i","push","front","back","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAhC;AACA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACU,IAAAA;AAAD,MAAWP,SAAS,EAA1B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACM,MAAD,CAA/B;AACAH,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD;;AACDD,IAAAA,QAAQ;AACT,GANM,EAMJ,CAACD,MAAD,CANI,CAAT;AAOEX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAGP,IAAI,CAACE,KAAvB;;AACA,QAAIF,IAAI,CAACE,KAAL,CAAWM,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAEL,SAAS,CAACG,CAAD,CAAT,CAAaE,KADZ;AAERC,UAAAA,IAAI,EAAEN,SAAS,CAACG,CAAD,CAAT,CAAaG,IAFX;AAGRC,UAAAA,EAAE,EAAEP,SAAS,CAACG,CAAD,CAAT,CAAaI,EAHT;AAIRV,UAAAA,MAAM,EAAEG,SAAS,CAACG,CAAD,CAAT,CAAaN;AAJb,SAAV;AAMD;;AACDD,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD;AACF,GAdQ,EAcN,CAACT,IAAD,CAdM,CAAT;AAeF,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,iCAAX;AAAA,+BACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAA,kCACE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAwB,YAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,6BAAMA,IAAI,CAACe,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeH;;GAzCQhB,Q;UAGYF,S;;;KAHZE,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\"\n\nfunction DeckEdit(){\n    const [deck, setDeck] = useState({cards: []});\n    const [cards, setCards] = useState([]);\n    const {deckId} = useParams();\n    useEffect(() => {\n        async function loadDeck() {\n          const response = await readDeck(deckId);\n          setDeck(response);\n        }\n        loadDeck();\n      }, [deckId]);\n      useEffect(() => {\n        const deckCards = deck.cards;\n        if (deck.cards.length > 0) {\n          let card = [];\n          for (let i = 0; i < deckCards.length; i++) {\n            card.push({\n              front: deckCards[i].front,\n              back: deckCards[i].back,\n              id: deckCards[i].id,\n              deckId: deckCards[i].deckId,\n            });\n          }\n          setCards(card);\n        }\n      }, [deck]);\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n          <div class=\"collapse navbar-collapse d-flex\">\n            <ul class=\"navbar\">\n              <a class=\"navbar-brand\" href=\"/\">\n                Home\n              </a>\n              <a>/ {deck.name} </a>\n            </ul>\n          </div>\n        </nav>\n        \n      </div>\n    );\n}\n\nexport default DeckEdit"]},"metadata":{},"sourceType":"module"}