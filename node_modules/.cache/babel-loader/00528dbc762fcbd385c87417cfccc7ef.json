{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { createCard, listDecks, createDeck } from \"../utils/api/index.js\";\nimport { Route, Switch, Link } from \"react-router-dom\"; // import Card from \"./Card\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [deckOne, setDeckOne] = useState({});\n  const [cards, setCards] = useState({});\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks(); // const responseAPI = await response.json();\n\n      console.log(response);\n      setDeck(response[0]);\n      setCards(response[0].cards);\n    }\n\n    loadDeck();\n  }, []);\n  console.log(deck);\n  console.log(cards);\n  const cardCount = cards.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/decks/new\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cardCount, \" cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deck.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/deck/:deckID/study\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"otkPiLKCU3QExBd4E98HOVFqW48=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","createCard","listDecks","createDeck","Route","Switch","Link","Layout","deckOne","setDeckOne","cards","setCards","loadDeck","response","console","log","setDeck","deck","cardCount","length","name","description"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,UAA/B,QAAgD,uBAAhD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,kBAApC,C,CACA;;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMX,SAAS,EAAhC,CADwB,CAExB;;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,MAAAA,OAAO,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAP;AACAF,MAAAA,QAAQ,CAACE,QAAQ,CAAC,CAAD,CAAR,CAAYH,KAAb,CAAR;AACD;;AACDE,IAAAA,QAAQ;AACT,GATQ,EASN,EATM,CAAT;AAUFE,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,QAAMQ,SAAS,GAAGR,KAAK,CAACS,MAAN,GAAe,CAAjC;AACE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIF,SAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAID,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAA,iCACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArCQd,M;;KAAAA,M;AAuCT,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport {createCard, listDecks, createDeck} from \"../utils/api/index.js\"\nimport { Route, Switch, Link } from \"react-router-dom\";\n// import Card from \"./Card\";\n\n\nfunction Layout() {\n  const [deckOne, setDeckOne] = useState({});\n  const [cards, setCards] = useState({})\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      // const responseAPI = await response.json();\n      console.log(response)\n      setDeck(response[0])\n      setCards(response[0].cards)\n    }\n    loadDeck();\n  }, [])\nconsole.log(deck)\nconsole.log(cards)\nconst cardCount = cards.length - 1\n  return (\n    <div>\n      <Header />\n      <Link to=\"/decks/new\">Create Deck</Link>\n      <div className=\"container\">\n        <h3>{deck.name}</h3>\n        <p>{cardCount} cards</p>\n        <p>{deck.description}</p>\n        <Link to=\"/\"></Link>\n        <Link to=\"/deck/:deckID/study\">Study</Link>\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact path=\"/\">\n          </Route>\n          <Route>\n           <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}