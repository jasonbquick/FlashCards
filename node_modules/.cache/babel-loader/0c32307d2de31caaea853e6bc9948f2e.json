{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardEdit() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    name: \"loading...\"\n  });\n  const [card, setCard] = useState({\n    front: \"loading...\",\n    back: \"loading...\"\n  });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleSubmit = () => {\n    const newCard = {\n      id: cardId,\n      front: front,\n      back: back\n    };\n    console.log(newCard);\n    updateCard(newCard);\n  };\n\n  useEffect(() => {\n    async function loadCard() {\n      const response = await readCard(cardId);\n      setCard(response);\n    }\n\n    loadCard();\n  }, [cardId]);\n\n  const handleFrontChange = event => setFront(event.target.value);\n\n  const handleBackChange = event => setBack(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\" / Edit Card \", cardId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: card.front,\n        onChange: handleFrontChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: card.back,\n        onChange: handleBackChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        class: \"btn btn-secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardEdit, \"zgbybmcYixJEDqDk5XXqqnEZr9s=\", false, function () {\n  return [useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/CardEdit.js"],"names":["React","useEffect","useState","Link","useParams","readDeck","readCard","updateCard","CardEdit","deckId","cardId","deck","setDeck","name","card","setCard","front","back","setFront","setBack","loadDeck","response","handleSubmit","newCard","id","console","log","loadCard","handleFrontChange","event","target","value","handleBackChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index\";\n\nfunction CardEdit() {\n  const { deckId, cardId } = useParams();\n  const [deck, setDeck] = useState({ name: \"loading...\" });\n  const [card, setCard] = useState({ front: \"loading...\", back: \"loading...\" });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n    loadDeck();\n  }, [deckId]);\n\n  const handleSubmit = () => {\n    const newCard = { id: cardId, front: front, back: back };\n    console.log(newCard);\n    updateCard(newCard);\n  };\n\n  useEffect(() => {\n    async function loadCard() {\n      const response = await readCard(cardId);\n      setCard(response);\n    }\n    loadCard();\n  }, [cardId]);\n\n  const handleFrontChange = (event) => setFront(event.target.value);\n  const handleBackChange = (event) => setBack(event.target.value);\n\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-item\" href=\"/\">\n              Home\n            </a>\n            <Link to={`/decks/${deckId}`}>/ {deck.name} </Link>\n            <a> / Edit Card {cardId}</a>\n          </ul>\n        </div>\n      </nav>\n      <div>\n        <h1>Edit Card</h1>\n        <h6>Front</h6>\n        <textarea\n          placeholder={card.front}\n          onChange={handleFrontChange}\n        ></textarea>\n        <h6>Back</h6>\n        <textarea\n          placeholder={card.back}\n          onChange={handleBackChange}\n        ></textarea>\n      </div>\n      <div>\n        <Link to={`/decks/${deckId}`} class=\"btn btn-secondary\">\n          Cancel\n        </Link>\n        <button class=\"btn btn-primary\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CardEdit;\n"]},"metadata":{},"sourceType":"module"}