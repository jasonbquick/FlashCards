{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams(); // console.log(url)\n  // /decks/1/study\n  // console.log(path)\n  // /decks/:deckId/study\n  // console.log(deckId)\n  // 1\n  // const deck = readDeck()\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      console.log(response);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  console.log(deck);\n  const cards = deck.cards;\n  console.log(cards);\n\n  function cardView(cards) {\n    if (cards.length <= 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Not enough cards.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: \" / Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckView, \"7AXUgcGWDGxrWyuhxprYNGzQAT0=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","readDeck","DeckView","deck","setDeck","url","path","deckId","loadDeck","response","console","log","cards","cardView","length","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBP,aAAa,EAAnC;AACA,QAAK;AAACQ,IAAAA;AAAD,MAAWP,SAAS,EAAzB,CAHgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,QAAf,GAA0B;AACtB,YAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACM,MAAD,CAA/B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,OAAO,CAACK,QAAD,CAAP;AACH;;AACDD,IAAAA,QAAQ;AACX,GAPQ,EAON,CAACD,MAAD,CAPM,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,QAAMS,KAAK,GAAGT,IAAI,CAACS,KAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,WAASC,QAAT,CAAkBD,KAAlB,EAAyB;AACrB,QAAIA,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB;AACnB,0BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,WAAO,IAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,iCAAX;AAAA,+BACI;AAAI,UAAA,KAAK,EAAC,QAAV;AAAA,kCACJ;AAAG,YAAA,KAAK,EAAC,cAAT;AAAwB,YAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,eAEJ;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA,6BAA0BX,IAAI,CAACY,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFI,eAGJ;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA,iBAAKZ,IAAI,CAACY,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/CQb,Q;UAEiBH,a,EACNC,S;;;KAHXE,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\"\n\nfunction DeckView() {\n    const [deck, setDeck] = useState({})\n    const { url, path } = useRouteMatch();\n    const{deckId} = useParams();\n    // console.log(url)\n    // /decks/1/study\n    // console.log(path)\n    // /decks/:deckId/study\n    // console.log(deckId)\n    // 1\n    // const deck = readDeck()\n    useEffect(() => {\n        async function loadDeck() {\n            const response = await readDeck(deckId);\n            console.log(response)\n            setDeck(response)\n        }\n        loadDeck()\n    }, [deckId])\n    console.log(deck)\n    const cards = deck.cards\n    console.log(cards)\n    function cardView(cards) {\n        if (cards.length <= 2) {\n            return (\n                <div>\n                    <h2>Not enough cards.</h2>\n                </div>\n            )\n        }\n        return null\n    }\n    return (\n        <div>\n            <nav class=\"navbar navbar-light bg-light\">\n                <div class=\"collapse navbar-collapse d-flex\">\n                    <ul class=\"navbar\">\n                <a class=\"navbar-brand\" href=\"/\">Home</a>\n                <a class=\"navbar-item\">/ {deck.name} </a>\n                <a class=\"navbar-item\"> / Study</a>\n                </ul>\n                </div>\n            </nav>\n            <h1>{deck.name}: Study</h1>\n\n        </div>\n    )\n}\n\nexport default DeckView"]},"metadata":{},"sourceType":"module"}