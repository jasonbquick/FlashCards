{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { createCard, listDecks, createDeck } from \"../utils/api/index.js\";\nimport { Route, Switch, Link } from \"react-router-dom\"; // import Card from \"./Card\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [deckOne, setDeckOne] = useState({});\n  const [deckTwo, setDeckTwo] = useState({});\n  const [cardsOne, setCardsOne] = useState({});\n  const [cardsTwo, setCardsTwo] = useState({});\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks(); // const responseAPI = await response.json();\n\n      console.log(response);\n      setDeckOne(response[0]);\n      setDeckTwo(response[1]);\n      setCardsOne(response[0].cards);\n      setCardsTwo(response[1].cards);\n    }\n\n    loadDeck();\n  }, []);\n  console.log(deckOne);\n  console.log(deckTwo);\n  console.log(cardsOne);\n  console.log(cardsTwo);\n  const cardOneCount = cards.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/decks/new\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deckOne.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cardCount, \" cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deckOne.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/deck/:deckID/study\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"cOYtO/v4cqbJSG4NlIQUomtaEds=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","createCard","listDecks","createDeck","Route","Switch","Link","Layout","deckOne","setDeckOne","deckTwo","setDeckTwo","cardsOne","setCardsOne","cardsTwo","setCardsTwo","loadDeck","response","console","log","cards","cardOneCount","length","name","cardCount","description"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,UAA/B,QAAgD,uBAAhD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,kBAApC,C,CACA;;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMf,SAAS,EAAhC,CADwB,CAExB;;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,MAAAA,UAAU,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAV;AACAN,MAAAA,UAAU,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAV;AACAJ,MAAAA,WAAW,CAACI,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAb,CAAX;AACAL,MAAAA,WAAW,CAACE,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAb,CAAX;AACD;;AACDJ,IAAAA,QAAQ;AACT,GAXQ,EAWN,EAXM,CAAT;AAYFE,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,QAAMO,YAAY,GAAGD,KAAK,CAACE,MAAN,GAAe,CAApC;AACE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAKd,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIC,SAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIhB,OAAO,CAACiB;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAA,iCACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CQlB,M;;KAAAA,M;AA6CT,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport {createCard, listDecks, createDeck} from \"../utils/api/index.js\"\nimport { Route, Switch, Link } from \"react-router-dom\";\n// import Card from \"./Card\";\n\n\nfunction Layout() {\n  const [deckOne, setDeckOne] = useState({});\n  const [deckTwo, setDeckTwo] = useState({});\n  const [cardsOne, setCardsOne] = useState({})\n  const [cardsTwo, setCardsTwo] = useState({});\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await listDecks();\n      // const responseAPI = await response.json();\n      console.log(response)\n      setDeckOne(response[0])\n      setDeckTwo(response[1])\n      setCardsOne(response[0].cards)\n      setCardsTwo(response[1].cards)\n    }\n    loadDeck();\n  }, [])\nconsole.log(deckOne)\nconsole.log(deckTwo)\nconsole.log(cardsOne)\nconsole.log(cardsTwo)\nconst cardOneCount = cards.length - 1\n  return (\n    <div>\n      <Header />\n      <Link to=\"/decks/new\">Create Deck</Link>\n      <div className=\"container\">\n        <h3>{deckOne.name}</h3>\n        <p>{cardCount} cards</p>\n        <p>{deckOne.description}</p>\n        <Link to=\"/\"></Link>\n        <Link to=\"/deck/:deckID/study\">Study</Link>\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact path=\"/\">\n          </Route>\n          <Route>\n           <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}