{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport DeckList from \"./DeckList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams(); // console.log(url)\n  // /decks/1/study\n  // console.log(path)\n  // /decks/:deckId/study\n  // console.log(deckId)\n  // 1\n  // const deck = readDeck()\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      console.log(response);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  console.log(deck);\n  console.log(cards);\n  useEffect(() => {\n    const deckCards = deck.cards;\n\n    if (deckCards.length > 0) {\n      let card = [];\n\n      for (let i = 0; i < deckCards.length; i++) {\n        card.push({\n          front: deckCards[i].front,\n          back: deckCards[i].back,\n          id: deckCards[i].id,\n          deckId: deckCards[i].deckId\n        });\n      }\n\n      setCards(card);\n    }\n  }, [deck]); // const CardView = useEffect(() => {\n  //     const length = cards.length\n  //     if (length > 2) {\n  //         return null\n  //     }\n  //     else {\n  //         return (\n  //         <div>\n  //                 <h2>Not enough cards.</h2>\n  //                 <p>You need at least 3 cards to study. There are { length } cards in this deck.</p>\n  //             </div>\n  //         )\n  //     }\n  // }, [cards])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: \" / Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckView, \"7rLYDCsBpaZ4bdHS+rvylOGxtPc=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","readDeck","DeckList","DeckView","deck","setDeck","cards","setCards","url","path","deckId","loadDeck","response","console","log","deckCards","length","card","i","push","front","back","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBV,aAAa,EAAnC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,SAAS,EAA5B,CAJkB,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACS,MAAD,CAA/B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,OAAO,CAACO,QAAD,CAAP;AACD;;AACDD,IAAAA,QAAQ;AACT,GAPQ,EAON,CAACD,MAAD,CAPM,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAGX,IAAI,CAACE,KAAvB;;AACA,QAAIS,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAEL,SAAS,CAACG,CAAD,CAAT,CAAaE,KADZ;AAERC,UAAAA,IAAI,EAAEN,SAAS,CAACG,CAAD,CAAT,CAAaG,IAFX;AAGRC,UAAAA,EAAE,EAAEP,SAAS,CAACG,CAAD,CAAT,CAAaI,EAHT;AAIRZ,UAAAA,MAAM,EAAEK,SAAS,CAACG,CAAD,CAAT,CAAaR;AAJb,SAAV;AAMD;;AACDH,MAAAA,QAAQ,CAACU,IAAD,CAAR;AACD;AACF,GAdQ,EAcN,CAACb,IAAD,CAdM,CAAT,CAtBkB,CAqClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,iCAAX;AAAA,+BACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAA,kCACE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAwB,YAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA,6BAA0BA,IAAI,CAACmB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAG,YAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,iBAAKnB,IAAI,CAACmB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtEQpB,Q;UAGeJ,a,EACHC,S;;;KAJZG,Q;AAwET,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\"\nimport DeckList from \"./DeckList\";\n\nfunction DeckView() {\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const { url, path } = useRouteMatch();\n  const { deckId } = useParams();\n  // console.log(url)\n  // /decks/1/study\n  // console.log(path)\n  // /decks/:deckId/study\n  // console.log(deckId)\n  // 1\n  // const deck = readDeck()\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      console.log(response);\n      setDeck(response);\n    }\n    loadDeck();\n  }, [deckId]);\n  console.log(deck);\n  console.log(cards);\n  useEffect(() => {\n    const deckCards = deck.cards;\n    if (deckCards.length > 0) {\n      let card = [];\n      for (let i = 0; i < deckCards.length; i++) {\n        card.push({\n          front: deckCards[i].front,\n          back: deckCards[i].back,\n          id: deckCards[i].id,\n          deckId: deckCards[i].deckId,\n        });\n      }\n      setCards(card);\n    }\n  }, [deck]);\n  // const CardView = useEffect(() => {\n  //     const length = cards.length\n  //     if (length > 2) {\n  //         return null\n  //     }\n  //     else {\n  //         return (\n  //         <div>\n  //                 <h2>Not enough cards.</h2>\n  //                 <p>You need at least 3 cards to study. There are { length } cards in this deck.</p>\n  //             </div>\n  //         )\n  //     }\n\n  // }, [cards])\n\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-brand\" href=\"/\">\n              Home\n            </a>\n            <a class=\"navbar-item\">/ {deck.name} </a>\n            <a class=\"navbar-item\"> / Study</a>\n          </ul>\n        </div>\n      </nav>\n      <h1>{deck.name}: Study</h1>\n      <CardView />\n    </div>\n  );\n}\n\nexport default DeckView"]},"metadata":{},"sourceType":"module"}