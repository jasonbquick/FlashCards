{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport DeckList from \"./DeckList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams(); // console.log(url)\n  // /decks/1/study\n  // console.log(path)\n  // /decks/:deckId/study\n  // console.log(deckId)\n  // 1\n  // const deck = readDeck()\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      console.log(response);\n      setDeck(response);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  console.log(deck);\n  console.log(deck.cards);\n  console.log(cards);\n  useEffect(() => {\n    if (deck.length > 0) {\n      let card = [];\n\n      for (let i = 0; i < deck.length; i++) {\n        card.push({\n          front: deck[i].front,\n          back: deck[i].back,\n          id: deck[i].id,\n          deckId: deck[i].deckId\n        });\n      }\n\n      setCards(card);\n    }\n  }, [deck]);\n\n  function CardView(cards) {\n    const length = cards.length;\n\n    if (length > 2) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Not enough cards.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You need at least 3 cards to study. There are \", length, \" cards in this deck.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-item\",\n            children: \" / Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckView, \"DXgIIJjueZKoyFYhiLwq2wMtrag=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/DeckView.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","readDeck","DeckList","DeckView","deck","setDeck","cards","setCards","url","path","deckId","loadDeck","response","console","log","length","card","i","push","front","back","id","CardView","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\"\nimport DeckList from \"./DeckList\";\n\nfunction DeckView() {\n    const [deck, setDeck] = useState({})\n    const [cards, setCards] = useState([])\n    const { url, path } = useRouteMatch();\n    const{deckId} = useParams();\n    // console.log(url)\n    // /decks/1/study\n    // console.log(path)\n    // /decks/:deckId/study\n    // console.log(deckId)\n    // 1\n    // const deck = readDeck()\n    useEffect(() => {\n        async function loadDeck() {\n            const response = await readDeck(deckId);\n            console.log(response)\n            setDeck(response)\n        }\n        loadDeck()\n    }, [deckId])\n    console.log(deck)\n    console.log(deck.cards)\n    console.log(cards)\n    useEffect(() => {\n        if (deck.length > 0) {\n            let card = [];\n            for (let i = 0; i < deck.length; i++){\n                card.push({front: deck[i].front, back: deck[i].back, id: deck[i].id, deckId: deck[i].deckId})\n            }\n            setCards(card)\n        }\n    }, [deck])\n    function CardView(cards) {\n        const length = cards.length\n        if (length > 2) {\n            return null\n        }\n        else {\n            return (\n            <div>\n                    <h2>Not enough cards.</h2>\n                    <p>You need at least 3 cards to study. There are {length} cards in this deck.</p>\n                </div>\n            )\n        }\n    }\n    return (\n        <div>\n            <nav class=\"navbar navbar-light bg-light\">\n                <div class=\"collapse navbar-collapse d-flex\">\n                    <ul class=\"navbar\">\n                <a class=\"navbar-brand\" href=\"/\">Home</a>\n                <a class=\"navbar-item\">/ {deck.name} </a>\n                <a class=\"navbar-item\"> / Study</a>\n                </ul>\n                </div>\n            </nav>\n            <h1>{deck.name}: Study</h1>\n            <CardView />\n\n        </div>\n    )\n}\n\nexport default DeckView"]},"metadata":{},"sourceType":"module"}