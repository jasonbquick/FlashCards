{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    name: \"\"\n  });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  const {\n    deckId\n  } = useParams(); //   const [max, setMax] = useState(0);\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n      const cards = response.cards; //   cards.forEach((card) => {\n      //     if (card.id > max) {\n      //       setMax(card.id);\n      //     }\n      //   });\n    }\n\n    loadDeck();\n  }, []);\n\n  const handleFrontChange = event => setFront(event.target.value);\n\n  const handleBackChange = event => setBack(event.target.value);\n\n  const handleSave = () => {\n    const card = {\n      front: front,\n      back: back\n    };\n    createCard(deckId, card).then(() => {\n      window.location.reload();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse navbar-collapse d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"navbar-brand\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: [\"/ \", deck.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" / Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Front side of card\",\n        onChange: handleFrontChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Back side of card\",\n        onChange: handleBackChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-secondary\",\n          onClick: () => history.push(\"/\"),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"cb+/d4I2LzjfXVx3HUyeQi8zd2A=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/AddCard.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","readDeck","createCard","AddCard","history","deck","setDeck","name","front","setFront","back","setBack","deckId","loadDeck","response","cards","handleFrontChange","event","target","value","handleBackChange","handleSave","card","then","window","location","reload","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAab,SAAS,EAA5B,CALiB,CAMnB;;AACEH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACW,MAAD,CAA/B;AACAN,MAAAA,OAAO,CAACQ,QAAD,CAAP;AACA,YAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAvB,CAHwB,CAI1B;AACA;AACA;AACA;AACA;AACC;;AACDF,IAAAA,QAAQ;AACT,GAZQ,EAYN,EAZM,CAAT;;AAaA,QAAMG,iBAAiB,GAAIC,KAAD,IAAWR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7C;;AACA,QAAMC,gBAAgB,GAAIH,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C;;AACA,QAAME,UAAU,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAG;AAAEd,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,IAAI,EAAEA;AAAtB,KAAb;AACAR,IAAAA,UAAU,CAACU,MAAD,EAASU,IAAT,CAAV,CAAyBC,IAAzB,CAA8B,MAAM;AAClCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD;AAGD,GALD;;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,iCAAX;AAAA,+BACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAA,kCACE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAwB,YAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASd,MAAO,EAA3B;AAAA,6BAAiCP,IAAI,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,WAAW,EAAC,oBADd;AAEE,QAAA,QAAQ,EAAES;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,WAAW,EAAC,mBADd;AAEE,QAAA,QAAQ,EAAEI;AAFZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,mBAAd;AAAkC,UAAA,OAAO,EAAE,MAAMhB,OAAO,CAACuB,IAAR,CAAa,GAAb,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAgC,UAAA,OAAO,EAAEN,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GA/DQlB,O;UACSH,U,EAIGD,S;;;KALZI,O;AAgET,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index\";\n\nfunction AddCard() {\n  const history = useHistory();\n  const [deck, setDeck] = useState({ name: \"\" });\n  const [front, setFront] = useState();\n  const [back, setBack] = useState();\n  const { deckId } = useParams();\n//   const [max, setMax] = useState(0);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n      const cards = response.cards;\n    //   cards.forEach((card) => {\n    //     if (card.id > max) {\n    //       setMax(card.id);\n    //     }\n    //   });\n    }\n    loadDeck();\n  }, []);\n  const handleFrontChange = (event) => setFront(event.target.value);\n  const handleBackChange = (event) => setBack(event.target.value);\n  const handleSave = () => {\n    const card = { front: front, back: back };\n    createCard(deckId, card).then(() => {\n      window.location.reload();\n    });\n  };\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"collapse navbar-collapse d-flex\">\n          <ul class=\"navbar\">\n            <a class=\"navbar-brand\" href=\"/\">\n              Home\n            </a>\n            <Link to={`/decks/${deckId}`}>/ {deck.name} </Link>\n            <a> / Add Card</a>\n          </ul>\n        </div>\n      </nav>\n      <div>\n        <h4>Front</h4>\n        <textarea\n          placeholder=\"Front side of card\"\n          onChange={handleFrontChange}\n        ></textarea>\n        <h4>Back</h4>\n        <textarea\n          placeholder=\"Back side of card\"\n          onChange={handleBackChange}\n        ></textarea>\n        <div>\n          <button class=\"btn btn-secondary\" onClick={() => history.push(\"/\")}>\n            Done\n          </button>\n          <button class=\"btn btn-primary\" onClick={handleSave}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}