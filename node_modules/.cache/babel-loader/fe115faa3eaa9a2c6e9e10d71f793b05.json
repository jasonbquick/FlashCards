{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState([{\n    name: \"loading..\"\n  }]);\n  const [deckDesc, setDeckDesc] = useState([]);\n  useEffect(() => {\n    async function loadDeck() {\n      let deck = [];\n      const response = await listDecks(); // response.forEach((index) => {\n      //     deck.push({\n      //         name: index.name,\n      //         id: index.id,\n      //         description: index.description,\n      //         length: index.cards.length\n      //     })\n      // })\n\n      for (let i = 0; i < response.length; i++) {\n        deck.push({\n          name: response[i].name,\n          id: response[i].id,\n          description: response[i].description,\n          length: response[i].cards.length\n        });\n      }\n\n      console.log(deck);\n      setDecks(deck);\n    }\n\n    loadDeck();\n  }, []);\n  const deck = decks.map(deck => /*#__PURE__*/_jsxDEV(DeckList, {\n    deck: deck\n  }, deck.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: deck\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"y+j1S2b6xrIMqONoEDBe5E4HC00=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/flashcards/j/src/Layout/Home.js"],"names":["React","useState","useEffect","DeckList","listDecks","Home","decks","setDecks","name","deckDesc","setDeckDesc","loadDeck","deck","response","i","length","push","id","description","cards","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAD,CAAlC;AACF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,QAAf,GAA0B;AACtB,UAAIC,IAAI,GAAG,EAAX;AACF,YAAMC,QAAQ,GAAG,MAAMT,SAAS,EAAhC,CAFwB,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrCF,QAAAA,IAAI,CAACI,IAAL,CAAU;AACNR,UAAAA,IAAI,EAAEK,QAAQ,CAACC,CAAD,CAAR,CAAYN,IADZ;AAENS,UAAAA,EAAE,EAAEJ,QAAQ,CAACC,CAAD,CAAR,CAAYG,EAFV;AAGNC,UAAAA,WAAW,EAAEL,QAAQ,CAACC,CAAD,CAAR,CAAYI,WAHnB;AAINH,UAAAA,MAAM,EAAEF,QAAQ,CAACC,CAAD,CAAR,CAAYK,KAAZ,CAAkBJ;AAJpB,SAAV;AAMH;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACEL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD;;AACDD,IAAAA,QAAQ;AACT,GAxBQ,EAwBN,EAxBM,CAAT;AA6BI,QAAMC,IAAI,GAAGN,KAAK,CAACgB,GAAN,CAAWV,IAAD,iBACnB,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,KAA2BA,IAAI,CAACK,EAAhC;AAAA;AAAA;AAAA;AAAA,UADS,CAAb;AAGF,sBACI;AAAA,cACSL;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzCQP,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect}  from \"react\";\nimport DeckList from \"./DeckList\";\nimport { listDecks } from \"../utils/api/index.js\";\n\n\nfunction Home() {\n    const [decks, setDecks] = useState([{ name: \"loading..\" }]);\n  const [deckDesc, setDeckDesc] = useState([]);\n\n  useEffect(() => {\n    async function loadDeck() {\n        let deck = [];\n      const response = await listDecks();\n    // response.forEach((index) => {\n    //     deck.push({\n    //         name: index.name,\n    //         id: index.id,\n    //         description: index.description,\n    //         length: index.cards.length\n    //     })\n    // })\n    for (let i = 0; i < response.length; i++){\n        deck.push({\n            name: response[i].name,\n            id: response[i].id,\n            description: response[i].description,\n            length: response[i].cards.length\n        })\n    }\n    console.log(deck)\n      setDecks(deck);\n    }\n    loadDeck();\n  }, []);\n\n\n\n\n      const deck = decks.map((deck) => (\n          <DeckList deck={deck} key={deck.id} />\n      ))\n    return (\n        <div>\n                {deck}\n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}